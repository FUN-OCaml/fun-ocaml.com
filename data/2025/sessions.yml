- slug: "raven-ml"
  title: Build Language Models with Raven
  speakers: ["thibaut"]
  kind: workshop
  abstract: |
      Discover how to build and train language models using OCaml with Raven, a modern scientific computing ecosystem that brings JAX-like capabilities to functional programming. This hands-on workshop introduces Raven's key libraries-Nx for tensor operations, Rune for automatic differentiation and JIT compilation, and Kaun for neural network architectures-demonstrating how to implement transformer-based models with type safety and competitive performance.

      We'll explore Rune's effect-based autodiff system, implement attention mechanisms, and train a small language model while leveraging OCaml's type system for production-ready ML systems.

- slug: "terrateam"
  title: "Frameworks: No, Libraries: Yes. Developing a product in OCaml from Scratch"
  speakers: ["malcolm"]
  kind: talk
  abstract: |
      Terrateam is an open source infrastructure management product written in OCaml.  In order to stay lean and flexible, Terrateam has developed almost all of its own frameworks and tooling.  With a small team, the Terrateam product punches well above its weight compared to its competition.  This talk will cover the choice to develop their own frameworks, the good, the bad, and how OCaml has been instrumental in being able to achieve so much despite being a two person company.

- slug: "oxcaml-system-engineers-pov"
  title: "0xCaml From a System Engineer's Point of View"
  speakers: ["dmitriy"]
  kind: talk
  abstract: |
      I do a lot of Rust, C, Zig and whatever else cursed systems programming languages are there. So recently 0xCaml popped out and I was def interested if I can finally use it. So I did some research on how it actually works comparing to native OCaml and other languages and try to build odiff (the fastest image comparison lib in the world) with 0xCaml. Here is what I learned.

- slug: "reinforcement-learning-workshop"
  title: "Train a Reinforcement Learning Agent for the Box-Pushing Game Sokoban in OCANNL or Raven"
  speakers: ["lukasz"]
  kind: workshop
  abstract: |
      I will give a very brief intro to Reinforcement Learning (RL), covering just the REINFORCE algorithm. We will build an RL harness and an environment for the Sokoban game (cheating allowed). We will program and train models using a convolutional neural net or an axial-attention transformer. While the nets are training, I will introduce the Group Relative Policy Optimization (GRPO) algorithm and discuss how our agent setup relates to post-training of language models on solving problems. Time permitting, we would then implement GRPO and compare its performance with REINFORCE.

- slug: "static-websites-functional-programming"
  title: "Generating Static Websites the Functional Programming Way"
  speakers: ["xavier"]
  kind: talk
  abstract: |
      Static site generators like Jekyll, Zola, and Hugo are effective, but fall short for complex sites like personal encyclopedias, wikis, or sites with rich content. Features like *backlinks* and *transclusions* require richer context and efficient builds. This talk explores the theory behind static site generation (as a case of *build systems*) and shows how to implement advanced features inspired by [Project Xanadu](https://www.xanadu.net/) using [YOCaml](https://github.com/xhtmlboi/yocaml), a static site framework based on functional abstractions (such as strong profunctors) in OCaml.

- slug: "slipshow"
  title: "Slipshow: A Full-Featured Presentation Tool in OCaml"
  speakers: ["paul-elliot"]
  kind: talk
  abstract: |
      Slipshow is a tool to create interactive presentations. Started as a JavaScript project, it is now fully written in OCaml and features a runtime engine, a compiler, a collaborative editing website, a VSCode extension, a standalone app...

      This talk tells the story of how it is possible to develop and maintain such a challenging project as a single developer.

      If you are reading this far into the abstract, I suspect you are going to FUN OCaml? Are you giving a talk? If so, consider (re)writing your presentation in Slipshow!

- slug: "compiler-hacking-101"
  title: "Hacking the OCaml Compiler to Add Type Reflection"
  speakers: ["nicolas"]
  kind: workshop
  abstract: |
      At LexiFi, we maintain a powerful fork of the OCaml compiler that extends it with type reflection capabilities, providing an alternative to PPX for many common tasks.

      In this hands-on workshop, participants implement a toy version of type reflection in the compiler, serving as both an introduction to the technique and a "compiler hacking 101" experience for those interested in contributing to OCaml's development.

- slug: "ocaml-ecosystem"
  title: "State of the OCaml Ecosystem 2025"
  speakers: ["leandro"]
  kind: talk
  abstract: |
      This talk breaks down how the OCaml ecosystem is actually growing by digging into real GitHub data - repo activity, contributor trends, and which libraries are gaining traction. We'll look at the numbers behind OCaml's momentum and what they tell us about where the community and tooling are headed in 2025.

- slug: "cross-platform-projects"
  title: "Cross-Platform OCaml Projects"
  speakers: ["manas"]
  kind: talk
  abstract: |
      OCaml's ecosystem includes many platform-specific packages that can break portability when transitive dependencies won't work across different operating systems.

      Manas Yayanth explains how they implemented portable lock files for esy (the Reason/OCaml package manager), ensuring projects can be built cross-platform.
